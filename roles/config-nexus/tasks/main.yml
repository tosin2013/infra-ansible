---

- name: Waiting for nexus build to complete
  shell: |
     set -o pipefail && oc get pods -n {{ nexus_namespace }} | grep Completed | grep nexus | wc -l
  register: install_status
  until: "'1' in install_status.stdout"
  retries: 120
  delay: 15
  args:
    executable: /bin/bash

- name: Waiting for nexus deployment
  shell: |
     set -o pipefail && oc get pods -n {{ nexus_namespace }} | grep Running | grep nexus | wc -l
  register: install_status
  until: "'1' in install_status.stdout"
  retries: 60
  delay: 15
  args:
    executable: /bin/bash

- name: "Get Nexus password"
  shell: |
     set -o pipefail && oc get pods --selector=name=nexus  -n {{ nexus_namespace }} -o=name
  register: nexus_podname
  until: "'nexus' in nexus_podname.stdout"
  retries: 60
  delay: 15
  args:
    executable: /bin/bash
  when:
  - nexus_password is not defined or nexus_password|trim == ''

- name: display nexus pod name
  debug:
   var:  nexus_podname
    
- name: Getting nexus pod name
  set_fact:
    nexus_pod: "{{ nexus_podname.stdout }}"
  ignore_errors: false
  when:
  - nexus_password is not defined or nexus_password|trim == ''

- name: display nexus pod name
  debug:
    msg: Generated {{ nexus_pod }}

- name: "Get Nexus password"
  shell: |
    #!/bin/bash
    oc exec -it {{ nexus_pod }} /usr/bin/cat /nexus-data/admin.password  -n {{ nexus_namespace }}
  register: nexus_default_password
  when:
  - nexus_password is not defined or nexus_password|trim == ''

- name: "Set Nexus nexus.scripts.allowCreation=true"
  shell: |
    #!/bin/bash
    oc exec -it {{ nexus_pod }} /usr/bin/echo 'nexus.scripts.allowCreation=true' >> /nexus-data/etc/nexus.properties  -n {{ nexus_namespace }}
  when:
  - nexus_password is not defined or nexus_password|trim == ''

- name: "Delete nexus pod"
  shell: |
    #!/bin/bash
    oc delete pod{{ nexus_pod }} -n {{ nexus_namespace }}
  when:
  - nexus_password is not defined or nexus_password|trim == ''

- name: Waiting for nexus deployment
  shell: |
     set -o pipefail && oc get pods -n {{ nexus_namespace }} | grep Running | grep nexus | wc -l
  register: install_status
  until: "'1' in install_status.stdout"
  retries: 60
  delay: 15
  args:
    executable: /bin/bash
    
- name: setting default nexus password 
  set_fact:
    nexus_password: "{{ nexus_default_password.stdout }}"
  when:
  - nexus_password is not defined or nexus_password|trim == ''

- name: display nexus password
  debug:
    msg: Generated {{ nexus_password }}

- name: "Look up Nexus URL"
  command: >
    oc get route {{ nexus_name | default('nexus') }} -n {{ nexus_namespace }} -o custom-columns=ROUTE:.spec.host --no-headers
  register: nexus_url_result
  when:
  - nexus_url is not defined or nexus_url|trim == ''

- name: "Set nexus_url Result"
  set_fact:
    nexus_url: "{{ nexus_url_result.stdout }}"
  when:
  - nexus_url is not defined or nexus_url|trim == ''

- name: "Ensure Nexus is available before attempting to communicate"
  vars:
    passed_nexus_password: "{{ nexus_password }}"
  include_tasks: wait-for-nexus.yml

- name: "Configure Repos"
  include_tasks: configure-repos.yml
  vars:
    passed_nexus_password: "{{ nexus_password }}"
  with_items:
  - "{{ nexus_repos | default([]) }}"

